worker_processes 1;

user nobody nogroup;
pid /tmp/nginx.pid;
error_log /dev/stdout crit;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  use epoll;
}

http {
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;

  log_format custom '$http_x_forwarded_for $remote_addr request="$request" status=$status time=${request_time}s '
                    'request_size=$request_length response_size=$body_bytes_sent '
                    'agent="$http_user_agent" host=$http_host';
  access_log /dev/stdout custom;
  sendfile on;

  server {
    # if no Host match, close the connection
    listen 443 ssl http2 default_server;

    ssl on;
    ssl_certificate /ssl/cert.pem;
    ssl_certificate_key /ssl/key.pem;

    return 444;
  }

  upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response
    # for a TCP configuration
    server web:8000 fail_timeout=0;
  }

  server {
    listen 443 ssl http2;
    # HOST_NAME will be replaced with the real host name in deploy/deploy
    server_name {{HOST_NAME}};
    include /etc/nginx/allowed.nginx.conf;

    ssl on;
    ssl_certificate /ssl/cert.pem;
    ssl_certificate_key /ssl/key.pem;

    client_max_body_size 4G;

    keepalive_timeout 5;

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Host $http_host;

      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://app_server;
    }
  }

  upstream glances_server {
    server glances:61208 fail_timeout=0;
  }

  server {
    listen 443 ssl http2;
    server_name morpheus-status.tutorcruncher.com;
    include /etc/nginx/allowed.nginx.conf;

    ssl on;
    ssl_certificate /ssl/cert.pem;
    ssl_certificate_key /ssl/key.pem;

    client_max_body_size 100M;

    keepalive_timeout 5;
    auth_basic "Restricted";
    auth_basic_user_file /htpasswd;
    access_log off;

    location /status {
      stub_status on;
    }

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://glances_server;
    }
  }
}
