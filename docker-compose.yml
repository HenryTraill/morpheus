version: '2.1'

volumes:
  es_data: {}
  redis_data: {}

services:
  logs:
    image: gliderlabs/logspout
    environment:
      SYSLOG_HOSTNAME: 'morpheus'
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always

  glances:
    image: nicolargo/glances:stable
    pid: host
    environment:
      GLANCES_OPT: '-w'
    ports:
    - 61208-61209:61208-61209
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
    - logs

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.4.1
    environment:
    - cluster.name=docker-cluster
    - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
#    - bootstrap.memory_lock=true
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    mem_limit: 1g
    restart: always
    volumes:
    - es_data:/usr/share/elasticsearch/data
    depends_on:
    - logs

  redis:
    image: redis:3.0-alpine
    volumes:
    - redis_data:/data
    restart: always
    depends_on:
    - logs

  web:
    build: morpheus
    environment:
      APP_AUTH_KEY: ${APP_AUTH_KEY}
      APP_MANDRILL_KEY: ${APP_MANDRILL_KEY}
      APP_MANDRILL_KEY: ${APP_MANDRILL_KEY}
      APP_USER_FERNET_KEY: ${APP_USER_FERNET_KEY}
      APP_REDIS_HOST: redis
      APP_ELASTIC_HOST: elastic
      APP_COMMIT: ${COMMIT}
      APP_RELEASE_DATE: ${RELEASE_DATE}
      APP_RAVEN_DSN: ${RAVEN_DSN}
      APP_SERVER_NAME: ${SERVER_NAME}
    restart: always
    depends_on:
    - elastic
    - redis

  worker:
    build: morpheus
    entrypoint:
    - ./run.py
    - worker
    environment:
      APP_AUTH_KEY: ${APP_AUTH_KEY}
      APP_MANDRILL_KEY: ${APP_MANDRILL_KEY}
      APP_MANDRILL_KEY: ${APP_MANDRILL_KEY}
      APP_USER_FERNET_KEY: ${APP_USER_FERNET_KEY}
      APP_REDIS_HOST: redis
      APP_ELASTIC_HOST: elastic
      APP_COMMIT: ${COMMIT}
      APP_RELEASE_DATE: ${RELEASE_DATE}
      APP_RAVEN_DSN: ${RAVEN_DSN}
      APP_SERVER_NAME: ${SERVER_NAME}
      CHECK: worker
    restart: always
    depends_on:
    - elastic
    - redis
